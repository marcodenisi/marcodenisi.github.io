<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Marco Denisi</title>
    <link>https://marcodenisi.dev/en/tags/java/</link>
    <description>Recent content in Java on Marco Denisi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it</language>
    <lastBuildDate>Sun, 15 Mar 2020 12:21:26 +0100</lastBuildDate>
    
	<atom:link href="https://marcodenisi.dev/en/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Resilience in microservices era</title>
      <link>https://marcodenisi.dev/en/blog/resilience-in-microservices-era/</link>
      <pubDate>Sun, 15 Mar 2020 12:21:26 +0100</pubDate>
      
      <guid>https://marcodenisi.dev/en/blog/resilience-in-microservices-era/</guid>
      <description>How many times did you have to integrate an external service? Every day we say sentences like:
 this HTTP call takes too long this stuff breaks all the times  All these complaints are typical when a remote call should be performed, especially when we have to deal with unresponsive systems, which can cause a cascade effect that can be hard to come back from.
This is even more true when we have to work with a microservices architecture with synchronous HTTP calls.</description>
    </item>
    
  </channel>
</rss>