<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Marco Denisi</title>
    <link>https://marcodenisi.dev/it/blog/</link>
    <description>Recent content in Blog on Marco Denisi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it</language>
    <lastBuildDate>Thu, 26 Sep 2019 00:07:46 +0200</lastBuildDate>
    
	<atom:link href="https://marcodenisi.dev/it/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perchè dovresti usare Conventional Commits</title>
      <link>https://marcodenisi.dev/it/blog/perch%C3%A8-dovresti-usare-conventional-commits/</link>
      <pubDate>Fri, 10 Jan 2020 10:30:41 +0100</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/perch%C3%A8-dovresti-usare-conventional-commits/</guid>
      <description>Ormai ovunque (o quasi) viene utilizzato un sistema di versioning per rendere più semplice la collaborazione di diversi sviluppatori sulla stessa codebase. Tutto bellissimo, non fosse che nella maggior parte dei casi, a lungo andare la storia dei diversi commit si avvicini molto alla seguente:
Qualche commit ha introdotto una breaking change? Ci sono state fix? In bocca al lupo a trovare la risposta guardando solo la storia dei commit: cominciate pure a peregrinare all&amp;rsquo;interno dell&amp;rsquo;open space chiedendo chi ha fatto cosa.</description>
    </item>
    
    <item>
      <title>Github Actions: un esempio concreto con Hugo e Latex</title>
      <link>https://marcodenisi.dev/it/blog/github-actions-un-esempio-concreto-con-hugo-e-latex/</link>
      <pubDate>Tue, 05 Nov 2019 10:26:59 +0100</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/github-actions-un-esempio-concreto-con-hugo-e-latex/</guid>
      <description>È un po&amp;rsquo; di tempo che ho deciso di scrivere il mio curriculum in Latex e di utilizzare Github per il versionamento (qui il repository). Mi sono detto che sarebbe stato molto bello se, ad ogni aggiornamento (aka ad ogni nuovo commit sul repository), mi fossi ritrovato il pdf risultante dalla compilazione come nuova release del mio cv.
Lo stesso desiderio l&amp;rsquo;ho avuto quando ho cominciato a pensare e costruire questo blog: non sarebbe fantastico se ad ogni nuovo contenuto la pubblicazione avvenisse in maniera automatica?</description>
    </item>
    
    <item>
      <title>Lambda Step by Step</title>
      <link>https://marcodenisi.dev/it/blog/lambda-step-by-step/</link>
      <pubDate>Thu, 26 Sep 2019 00:07:46 +0200</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/lambda-step-by-step/</guid>
      <description>Nelle ultime settimane ho avuto molto a che fare con la creazione di AWS Lambda.
La difficoltà più grossa con cui ho dovuto fare i conti è stata quella di testare in locale queste funzioni. Sicuramente è possibile (anzi, necessario) scrivere unit ed integration test, ma mi piace comunque testare in un ambiente il più vicino possibile a quello di produzione.
Vorrei quindi costruire una sorta di guida per avere un reminder per i futuri sviluppi.</description>
    </item>
    
  </channel>
</rss>