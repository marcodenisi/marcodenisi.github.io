<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Marco Denisi</title>
    <link>https://marcodenisi.dev/it/blog/</link>
    <description>Recent content in Blog on Marco Denisi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it</language>
    <lastBuildDate>Thu, 26 Sep 2019 00:07:46 +0200</lastBuildDate><atom:link href="https://marcodenisi.dev/it/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fantastic bottlenecks and where to find them</title>
      <link>https://marcodenisi.dev/it/blog/fantastic-bottlenecks-and-where-to-find-them/</link>
      <pubDate>Thu, 23 Dec 2021 12:21:26 +0100</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/fantastic-bottlenecks-and-where-to-find-them/</guid>
      <description>In Klarna, I work in a team called Post Purchase Decisioning (aka PPD). We take care of a product called Skan, which is used by internal stakeholders (called fraud agents) to work on all the orders in Klarna that can be fraudolent.
This is a story all about how my life got flipped-turned upside down we approached the so called Peak Season (the range of time between the Black Friday and Christmax) and in detail, how we discovered and fixed a bottleneck.</description>
    </item>
    
    <item>
      <title>Come essere un buon intervistatore</title>
      <link>https://marcodenisi.dev/it/blog/come-essere-un-buon-intervistatore/</link>
      <pubDate>Thu, 17 Sep 2020 12:39:10 +0200</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/come-essere-un-buon-intervistatore/</guid>
      <description>Durante gli ultimi due anni mi sono ritrovato molto spesso a dover colloquiare qualcuno. Memore di alcune brutte esperienze passate, mi sono ripromesso di fare del mio meglio: volevo che le persone intervistate si sentissero a proprio agio parlando con me.
Cosa consiglierei al me stesso di due anni fa?
1. Non mettere in difficoltà il candidato   Prima cosa: sii gentile.
  No a domande cervellotiche, ma si a Valsoia a domande sfidanti.</description>
    </item>
    
    <item>
      <title>Business Driven Branching</title>
      <link>https://marcodenisi.dev/it/blog/business-driven-branching/</link>
      <pubDate>Tue, 19 May 2020 16:29:13 +0200</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/business-driven-branching/</guid>
      <description>L&amp;rsquo;ultimo anno e mezzo è stato particolarmente denso dal punto di vista lavorativo. Infatti, il progetto sul quale ho lavorato maggiormente è stato oggetto di un paio di grossi cambiamenti organizzativi che hanno richiesto anche un cambio di paradigma della gestione del codice.
Oggi vorrei condividere questa mie esperienza focalizzandomi sulla branching strategy.
Introduzione Git Git è diventato lo standard de facto per i sistemi di versionamento del codice per la sua semplicità.</description>
    </item>
    
    <item>
      <title>Resilienza nell&#39;era dei microservizi</title>
      <link>https://marcodenisi.dev/it/blog/resilienza-nellera-dei-microservizi/</link>
      <pubDate>Sun, 15 Mar 2020 12:21:26 +0100</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/resilienza-nellera-dei-microservizi/</guid>
      <description>Quante volte è capitato di dover integrare un servizio esterno all&amp;rsquo;interno dei nostri progetti? Sono all&amp;rsquo;ordine del giorno frasi come:
 la chiamata HTTP ci mette una vita! questa roba si spacca una volta si e l&amp;rsquo;altra pure in produzione andrà giù tutto!  Tutte queste (giuste) lamentele sono tipiche di quando dobbiamo fare chiamate tra macchine remote. Soprattutto quando si ha a che fare con sistemi unresponsive, c&amp;rsquo;è il rischio che finiscano le risorse portando a fallimenti a cascata.</description>
    </item>
    
    <item>
      <title>Perchè dovresti usare Conventional Commits</title>
      <link>https://marcodenisi.dev/it/blog/perch%C3%A8-dovresti-usare-conventional-commits/</link>
      <pubDate>Fri, 10 Jan 2020 10:30:41 +0100</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/perch%C3%A8-dovresti-usare-conventional-commits/</guid>
      <description>Ormai ovunque (o quasi) viene utilizzato un sistema di versioning per rendere più semplice la collaborazione di diversi sviluppatori sulla stessa codebase. Tutto bellissimo, non fosse che nella maggior parte dei casi, a lungo andare la storia dei diversi commit si avvicini molto alla seguente:
Qualche commit ha introdotto una breaking change? Ci sono state fix? In bocca al lupo a trovare la risposta guardando solo la storia dei commit: cominciate pure a peregrinare all&amp;rsquo;interno dell&amp;rsquo;open space chiedendo chi ha fatto cosa.</description>
    </item>
    
    <item>
      <title>Github Actions: un esempio concreto con Hugo e Latex</title>
      <link>https://marcodenisi.dev/it/blog/github-actions-un-esempio-concreto-con-hugo-e-latex/</link>
      <pubDate>Tue, 05 Nov 2019 10:26:59 +0100</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/github-actions-un-esempio-concreto-con-hugo-e-latex/</guid>
      <description>È un po&#39; di tempo che ho deciso di scrivere il mio curriculum in Latex e di utilizzare Github per il versionamento (qui il repository). Mi sono detto che sarebbe stato molto bello se, ad ogni aggiornamento (aka ad ogni nuovo commit sul repository), mi fossi ritrovato il pdf risultante dalla compilazione come nuova release del mio cv.
Lo stesso desiderio l&amp;rsquo;ho avuto quando ho cominciato a pensare e costruire questo blog: non sarebbe fantastico se ad ogni nuovo contenuto la pubblicazione avvenisse in maniera automatica?</description>
    </item>
    
    <item>
      <title>Lambda Step by Step</title>
      <link>https://marcodenisi.dev/it/blog/lambda-step-by-step/</link>
      <pubDate>Thu, 26 Sep 2019 00:07:46 +0200</pubDate>
      
      <guid>https://marcodenisi.dev/it/blog/lambda-step-by-step/</guid>
      <description>Nelle ultime settimane ho avuto molto a che fare con la creazione di AWS Lambda.
La difficoltà più grossa con cui ho dovuto fare i conti è stata quella di testare in locale queste funzioni. Sicuramente è possibile (anzi, necessario) scrivere unit ed integration test, ma mi piace comunque testare in un ambiente il più vicino possibile a quello di produzione.
Vorrei quindi costruire una sorta di guida per avere un reminder per i futuri sviluppi.</description>
    </item>
    
  </channel>
</rss>
